"use strict";

module.exports = "\nattribute vec3 position;\nattribute vec3 color;\nattribute vec3 emissive;\n\n#ifdef USE_TEXTURE\n    attribute vec2 texture;\n    attribute float textureEnable;\n    varying vec2 vTextureCoord;\n    varying float vTextureEnable;\n#endif\n\n#if DIR_LIGHT_NUM > 0\n    attribute vec3 normal;\n    uniform vec3 uDirectionLightColors[DIR_LIGHT_NUM];\n    uniform vec3 uDirectionLightPositions[DIR_LIGHT_NUM];\n    uniform mat3 uNormalMatrix;\n#endif\n\nuniform mat4 uPosition;\nuniform vec3 uAmbientLightColor;\nuniform mat4 uCamera;\n\nvarying vec3 vColor;\nvarying vec3 vEmissive;\nvarying vec3 vLightWeighting;\n\nvoid main(void) {\n    vColor = color;\n    vEmissive = emissive;\n\n    #ifdef USE_TEXTURE\n        vTextureCoord = texture;\n        vTextureEnable = textureEnable;\n    #endif\n\n    vec3 vLightTemp = vec3(0.0);\n\n    #if DIR_LIGHT_NUM > 0\n        vec3 transformedNormal = uNormalMatrix * normal;\n\n        for(int i = 0; i < DIR_LIGHT_NUM; i++) {\n            float dotProduct = dot(transformedNormal, uDirectionLightPositions[i]);\n            vec3 directionalLightWeighting = vec3(max(dotProduct, 0.0));\n            vLightTemp += uDirectionLightColors[i] * directionalLightWeighting;\n        }\n    #endif\n\n    vLightWeighting = uAmbientLightColor + vLightTemp;\n\n    gl_Position = uCamera * uPosition * vec4(position, 1.0);\n}\n";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zaGFkZXJzL2NvbXBsZXgudmVydC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sT0FBUCIsImZpbGUiOiJjb21wbGV4LnZlcnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGBcbmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uO1xuYXR0cmlidXRlIHZlYzMgY29sb3I7XG5hdHRyaWJ1dGUgdmVjMyBlbWlzc2l2ZTtcblxuI2lmZGVmIFVTRV9URVhUVVJFXG4gICAgYXR0cmlidXRlIHZlYzIgdGV4dHVyZTtcbiAgICBhdHRyaWJ1dGUgZmxvYXQgdGV4dHVyZUVuYWJsZTtcbiAgICB2YXJ5aW5nIHZlYzIgdlRleHR1cmVDb29yZDtcbiAgICB2YXJ5aW5nIGZsb2F0IHZUZXh0dXJlRW5hYmxlO1xuI2VuZGlmXG5cbiNpZiBESVJfTElHSFRfTlVNID4gMFxuICAgIGF0dHJpYnV0ZSB2ZWMzIG5vcm1hbDtcbiAgICB1bmlmb3JtIHZlYzMgdURpcmVjdGlvbkxpZ2h0Q29sb3JzW0RJUl9MSUdIVF9OVU1dO1xuICAgIHVuaWZvcm0gdmVjMyB1RGlyZWN0aW9uTGlnaHRQb3NpdGlvbnNbRElSX0xJR0hUX05VTV07XG4gICAgdW5pZm9ybSBtYXQzIHVOb3JtYWxNYXRyaXg7XG4jZW5kaWZcblxudW5pZm9ybSBtYXQ0IHVQb3NpdGlvbjtcbnVuaWZvcm0gdmVjMyB1QW1iaWVudExpZ2h0Q29sb3I7XG51bmlmb3JtIG1hdDQgdUNhbWVyYTtcblxudmFyeWluZyB2ZWMzIHZDb2xvcjtcbnZhcnlpbmcgdmVjMyB2RW1pc3NpdmU7XG52YXJ5aW5nIHZlYzMgdkxpZ2h0V2VpZ2h0aW5nO1xuXG52b2lkIG1haW4odm9pZCkge1xuICAgIHZDb2xvciA9IGNvbG9yO1xuICAgIHZFbWlzc2l2ZSA9IGVtaXNzaXZlO1xuXG4gICAgI2lmZGVmIFVTRV9URVhUVVJFXG4gICAgICAgIHZUZXh0dXJlQ29vcmQgPSB0ZXh0dXJlO1xuICAgICAgICB2VGV4dHVyZUVuYWJsZSA9IHRleHR1cmVFbmFibGU7XG4gICAgI2VuZGlmXG5cbiAgICB2ZWMzIHZMaWdodFRlbXAgPSB2ZWMzKDAuMCk7XG5cbiAgICAjaWYgRElSX0xJR0hUX05VTSA+IDBcbiAgICAgICAgdmVjMyB0cmFuc2Zvcm1lZE5vcm1hbCA9IHVOb3JtYWxNYXRyaXggKiBub3JtYWw7XG5cbiAgICAgICAgZm9yKGludCBpID0gMDsgaSA8IERJUl9MSUdIVF9OVU07IGkrKykge1xuICAgICAgICAgICAgZmxvYXQgZG90UHJvZHVjdCA9IGRvdCh0cmFuc2Zvcm1lZE5vcm1hbCwgdURpcmVjdGlvbkxpZ2h0UG9zaXRpb25zW2ldKTtcbiAgICAgICAgICAgIHZlYzMgZGlyZWN0aW9uYWxMaWdodFdlaWdodGluZyA9IHZlYzMobWF4KGRvdFByb2R1Y3QsIDAuMCkpO1xuICAgICAgICAgICAgdkxpZ2h0VGVtcCArPSB1RGlyZWN0aW9uTGlnaHRDb2xvcnNbaV0gKiBkaXJlY3Rpb25hbExpZ2h0V2VpZ2h0aW5nO1xuICAgICAgICB9XG4gICAgI2VuZGlmXG5cbiAgICB2TGlnaHRXZWlnaHRpbmcgPSB1QW1iaWVudExpZ2h0Q29sb3IgKyB2TGlnaHRUZW1wO1xuXG4gICAgZ2xfUG9zaXRpb24gPSB1Q2FtZXJhICogdVBvc2l0aW9uICogdmVjNChwb3NpdGlvbiwgMS4wKTtcbn1cbmA7Il19